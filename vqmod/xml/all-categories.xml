<modification>
	<id>All Categories Page FREE for OpenCart</id>
	<version>1.0.0</version>
	<vqmver>2.4.0</vqmver>
	<author>garudacrafts</author>
	<notes>
		- adds "All Categories" page with route=product/allcategories
		- adds "All Categories" link to header navigation menu
		- adds new breadcrumb "All Categories" to Category pages
		- includes Sorting options for "Name", "Path Name", "Sort Order", and "Path Sort Order"
		- groups Categories by index for "Name" and "Path Name" sorts
		- uses caching for database queries to improve page load speed
	</notes>
	
	<file name="catalog/language/english/common/header.php,catalog/language/english/product/category.php,catalog/language/english/product/product.php">
		<operation>
			<search position="bottom" offset="2"></search>
			<add><![CDATA[
			$_['text_all_categories']	= 'All Categories';
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/language/english/product/category.php">
		<operation>
			<search position="bottom" offset="2"></search>
			<add><![CDATA[
			$_['text_index']			= 'Category Index:';
			$_['text_path_name_asc']   = 'Path Name (A - Z)';
			$_['text_path_name_desc']  = 'Path Name (Z - A)';
			$_['text_sort_order_asc']   = 'Sort Order (Low &gt; High)';
			$_['text_sort_order_desc']  = 'Sort Order (High &gt; Low)';
			$_['text_sort_order_path_asc']   = 'Path Sort Order (Low &gt; High)';
			$_['text_sort_order_path_desc']  = 'Path Sort Order (High &gt; Low)';
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/controller/common/header.php">
		<operation>
			<search position="after"><![CDATA[
			$this->data['text_checkout']
			]]></search>			
			<add><![CDATA[
			$this->data['text_all_categories'] = $this->language->get('text_all_categories');
			$this->data['all_categories'] = $this->url->link('product/allcategories');
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/view/theme/*/template/common/header.tpl">
		<operation>
			<search position="before"><![CDATA[
			 <?php foreach ($categories as $category) { ?>
			]]></search>
			<add><![CDATA[
			<li><a href="<?php echo $all_categories; ?>"><?php echo $text_all_categories; ?></a></li>
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/controller/product/product.php">
		<operation>
			<search position="after" index="1"><![CDATA[
			if ($category_info) {
			]]></search>			
			<add><![CDATA[
			$this->data['breadcrumbs'][] = array(
				'text'      => $this->language->get('text_all_categories'),
				'href'      => $this->url->link('product/allcategories'),
				'separator' => $this->language->get('text_separator')
	   		);
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/controller/product/category.php">
		<operation>
			<search position="after" offset="2"><![CDATA[
			$this->url->link('common/home'),
			]]></search>			
			<add><![CDATA[
			$this->data['breadcrumbs'][] = array(
				'text'      => $this->language->get('text_all_categories'),
				'href'      => $this->url->link('product/allcategories'),
				'separator' => $this->language->get('text_separator')
	   		);
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/model/catalog/category.php">
		<operation>
			<search position="before"><![CDATA[
			function getCategory(
			]]></search>
			<add><![CDATA[
			public function getAllCategories($data) {
				$cache = md5(http_build_query($data));
				$all_category_data = $this->cache->get('product.all.' . (int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.' . $cache);
				
				if (!$all_category_data) {
					$all_category_data = array();
					
					$sql = "SELECT cp.category_id AS category_id, cd2.name AS name, c1.status, c1.image, c1.parent_id, c1.sort_order,
					GROUP_CONCAT(cd1.name ORDER BY cp.level SEPARATOR ' &gt; ') AS path_name, 
					GROUP_CONCAT(c2.sort_order ORDER BY cp.level SEPARATOR ' &gt; ') AS sort_order_path_display,
					GROUP_CONCAT(LPAD(c2.sort_order,10,'0') ORDER BY cp.level) AS sort_order_path
					FROM " . DB_PREFIX . "category_path cp 
					LEFT JOIN " . DB_PREFIX . "category c1 ON (cp.category_id = c1.category_id) 
					LEFT JOIN " . DB_PREFIX . "category c2 ON (cp.path_id = c2.category_id)
					LEFT JOIN " . DB_PREFIX . "category_description cd1 ON (cp.path_id = cd1.category_id) 
					LEFT JOIN " . DB_PREFIX . "category_description cd2 ON (cp.category_id = cd2.category_id) 
					WHERE cd1.language_id = '" . (int)$this->config->get('config_language_id') . "' 
					AND cd2.language_id = '" . (int)$this->config->get('config_language_id') . "'";

					if (!empty($data['filter_name'])) {
						$sql .= " AND cd2.name LIKE '" . $this->db->escape($data['filter_name']) . "%'";
					}
					
					if (!empty($data['filter_status'])) {
						$sql .= " AND c1.status = '" . (int)$data['filter_status'] . "'";
					}
					
					$sql .= " GROUP BY cp.category_id";

					$sort_data = array(
						'name',
						'path_name',
						'sort_order',
						'sort_order_path'
					);	

					if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
						$sql .= " ORDER BY " . $data['sort'];	
					} else {
						$sql .= " ORDER BY name";	
					}

					if (isset($data['order']) && ($data['order'] == 'DESC')) {
						$sql .= " DESC";
					} else {
						$sql .= " ASC";
					}

					if (isset($data['start']) || isset($data['limit'])) {
						if ($data['start'] < 0) {
							$data['start'] = 0;
						}				
						if ($data['limit'] < 1) {
							$data['limit'] = 20;
						}	
						$sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
					}

					$query = $this->db->query($sql);
									
					foreach ($query->rows as $result) {
						$all_category_data[] = array(
							'category_id' => $result['category_id'],
							'name'        => $result['name'],
							'path_name'	  => $result['path_name'],
							'image'  	  => $result['image'],
							'sort_order'  => $result['sort_order'],
							'sort_order_path'  => $result['sort_order_path'],
							'sort_order_path_display'  => $result['sort_order_path_display'],
							'status'  	  => $result['status']
						);
					}
				
					$this->cache->set('category.all.' . (int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.' . $cache, $all_category_data);
				}
				
				return $all_category_data;
			}
					
			public function getTotalCategories() {
				$query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_to_store c2s ON (c.category_id = c2s.category_id) WHERE c2s.store_id = '" . (int)$this->config->get('config_store_id') . "' AND c.status = '1'");	
				return $query->row['total'];
			}
			]]></add>
		</operation>
	</file>
	
</modification>